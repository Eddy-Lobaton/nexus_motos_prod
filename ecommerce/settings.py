"""
Django settings for ecommerce project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
import pymysql #conexion base de datos para railway
pymysql.install_as_MySQLdb()

from pathlib import Path
import dj_database_url #conectar railway
from decouple import config #conectar railway


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-oxhj21oz3%9(&l3!%2(my@tqnzj8@@)n_0gt-l6!b9epc2jp1v'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)  #True para desarrollo local y False para RAILWAY... 

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'tienda',
    'catalogo',
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders',  # para permitir conexiones desde Flutter
    'app'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'ecommerce.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ecommerce.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    # 'default': dj_database_url.config(default=config('DATABASE_URL'))
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'nexus_motos',
        'USER': 'root',
        'PASSWORD': 'dBfhinxPvthZKmapGsjixmRcPyTWTBzC',
        'HOST': 'centerbeam.proxy.rlwy.net',
        'PORT': '43371',
    }
}

    


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

LOGIN_URL = '/login'

#STATIC_ROOT = BASE_DIR / 'staticfiles'  # Para producción (cuando haces collectstatic):  # para producción   
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


# Solo si estás usando archivos dentro de apps
#STATICFILES_DIRS = [
#    BASE_DIR / 'tienda' / 'static',
#]

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'staticfiles'),
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'tienda.TblUsuario'

STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

CSRF_TRUSTED_ORIGINS = [
    'http://localhost:8000',
    'http://127.0.0.1:8000',
    'https://web-production-ec26b.up.railway.app',  # el que ya tenías
]

# Configuración básica de CORS
CORS_ALLOW_ALL_ORIGINS = True

# Autenticación por JWT
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}

#CONFIGURACION CORREO CON GMAIL
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'nexusmotossac@gmail.com'
EMAIL_HOST_PASSWORD = 'xqcv pjvj sour vlxh'
EMAIL_USE_TLS = True

# # === Mercado Pago ===
# MERCADOPAGO_ACCESS_TOKEN = config('MP_ACCESS_TOKEN', default='')   # TEST-xxx (backend)
# MERCADOPAGO_PUBLIC_KEY  = config('MP_PUBLIC_KEY', default='')      # TEST-xxx (frontend)

# # URLs de retorno (para Checkout Pro)
# MP_SUCCESS_URL   = config('MP_SUCCESS_URL',   default='http://localhost:8000/pagos/exito/')
# MP_FAILURE_URL   = config('MP_FAILURE_URL',   default='http://localhost:8000/pagos/fallo/')
# MP_PENDING_URL   = config('MP_PENDING_URL',   default='http://localhost:8000/pagos/pendiente/')

# Webhook/Notificaciones (para confirmar pagos en backend)
# En local necesitarás un túnel (ngrok/Cloudflare Tunnel). Por ahora dejamos un placeholder.
MP_NOTIFICATION_URL = config('MP_NOTIFICATION_URL', default='http://localhost:8000/pagos/webhook/')


# MERCADOPAGO_ACCESS_TOKEN = "TEST-7b5e762b-3323-4411-8d17-aa5ea536cc64"  # token de acceso
# MERCADOPAGO_PUBLIC_KEY = "TEST-7311708455947733-081013-7b630b0c0744cfbdcbf2332277456e0c-2617286436"   # public key


# === Mercado Pago ===
MERCADOPAGO_ACCESS_TOKEN = "TEST-7311708455947733-081013-7b630b0c0744cfbdcbf2332277456e0c-2617286436"
MERCADOPAGO_PUBLIC_KEY  = "TEST-7b5e762b-3323-4411-8d17-aa5ea536cc64"

# URLs para redirección después del pago
MP_SUCCESS_URL = "http://127.0.0.1:8000/pago/exitoso/"
MP_FAILURE_URL = "http://127.0.0.1:8000/pago/fallido/"
MP_PENDING_URL = "http://127.0.0.1:8000/pago/pendiente/"